name: Dorker Build and Release

on:
  schedule:
    - cron: '0 15 * * 0'
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - 'dnf-packages.list'
      - '.github/workflows/build.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - 'dnf-packages.list'
      - '.github/workflows/build.yml'
env:
  REGISTRY_IMAGE: darthfork/dorker

jobs:
  build:
    name: Build Container Image for ${{ matrix.platform }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/arm64
          - linux/amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        id: prep
        run: |
          source version
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "ostag=${TAG_OS}" >> $GITHUB_OUTPUT
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=${{ steps.prep.outputs.tag }}
            type=raw,value=${{ steps.prep.outputs.ostag }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build
        uses: docker/build-push-action@v6
        id: build
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

    outputs:
      tag: ${{ steps.prep.outputs.tag }}
      ostag: ${{ steps.prep.outputs.ostag }}

  release:
    name: Merge and Push Container Images
    runs-on: ubuntu-24.04
    needs:
      - build
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=${{ needs.build.outputs.tag }}
            type=raw,value=${{ needs.build.outputs.ostag }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
